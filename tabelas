-- Criando o esquema cinema
CREATE SCHEMA cinema;

-- Tabela de Clientes
CREATE TABLE cinema.clientes (
    id_cliente SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    telefone VARCHAR(20),
  	saldo DECIMAL(10, 2) DEFAULT 0.00
);

-- Tabela de Filmes
CREATE TABLE cinema.filmes (
    id_filme SERIAL PRIMARY KEY,
    titulo VARCHAR(100) NOT NULL,
    diretor VARCHAR(50),
    ano_lancamento INT
);

-- Tabela de Salas
CREATE TABLE cinema.salas (
    id_sala SERIAL PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    capacidade INT NOT NULL
);

-- Tabela de Sessões
CREATE TABLE cinema.sessoes (
    id_sessao SERIAL PRIMARY KEY,
    id_filme INT REFERENCES cinema.filmes(id_filme),
    id_sala INT REFERENCES cinema.salas(id_sala),
    data_hora TIMESTAMP NOT NULL
);

-- Tabela de Cadeiras
CREATE TABLE cinema.cadeiras (
    id_cadeira SERIAL PRIMARY KEY,
    id_sala INT REFERENCES cinema.salas(id_sala),
    numero INT NOT NULL,
    disponivel BOOLEAN NOT NULL DEFAULT TRUE
);

-- Tabela de Vendas de Ingressos
CREATE TABLE cinema.vendas_ingressos (
    id_venda SERIAL PRIMARY KEY,
    id_cliente INT REFERENCES cinema.clientes(id_cliente),
    id_sessao INT REFERENCES cinema.sessoes(id_sessao),
    id_cadeira INT REFERENCES cinema.cadeiras(id_cadeira),
    valor DECIMAL(10, 2) NOT NULL,
    data_venda DATE NOT NULL
);

-- Tabela de Avaliações
CREATE TABLE cinema.avaliacoes (
    id_avaliacao SERIAL PRIMARY KEY,
    id_cliente INT REFERENCES cinema.clientes(id_cliente),
    id_filme INT REFERENCES cinema.filmes(id_filme),
    nota INT NOT NULL CHECK (nota >= 1 AND nota <= 5),
    comentario TEXT,
    data_avaliacao DATE NOT NULL DEFAULT CURRENT_DATE
);

-- Tabela de Funcionários
CREATE TABLE cinema.funcionarios (
    id_funcionario SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    cargo VARCHAR(100) NOT NULL,
    salario DECIMAL(10, 2) NOT NULL
);

-- Tabela de Categorias de Filmes
CREATE TABLE cinema.categorias_filmes (
    id_categoria SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL
);

-- Tabela de Relação entre Filmes e Categorias
CREATE TABLE cinema.filmes_categorias (
    id_filme INT REFERENCES cinema.filmes(id_filme),
    id_categoria INT REFERENCES cinema.categorias_filmes(id_categoria),
    PRIMARY KEY (id_filme, id_categoria)
);

-- Tabela de Promoções
CREATE TABLE cinema.promocoes (
    id_promocao SERIAL PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    descricao TEXT,
    desconto DECIMAL(5, 2) NOT NULL
);

-- Tabela de Relação entre Clientes e Promoções
CREATE TABLE cinema.clientes_promocoes (
    id_cliente INT REFERENCES cinema.clientes(id_cliente),
    id_promocao INT REFERENCES cinema.promocoes(id_promocao),
    PRIMARY KEY (id_cliente, id_promocao)
);

-- Inserindo dados de exemplo nas tabelas existentes

-- Inserindo dados de exemplo na tabela de clientes
INSERT INTO cinema.clientes (nome, email, telefone, saldo)
VALUES
    ('Maria Silva', 'maria@example.com', '(11) 98765-4321', 0),
    ('João Souza', 'joao@example.com', '(11) 12345-6789', 50),
    ('Pedro Oliveira', 'pedro@example.com', '(11) 54321-9876', 100);

-- Inserindo dados de exemplo na tabela de filmes
INSERT INTO cinema.filmes (titulo, diretor, ano_lancamento)
VALUES
    ('Matrix', 'The Wachowskis', 1999),
    ('Pulp Fiction', 'Quentin Tarantino', 1994),
    ('Forrest Gump', 'Robert Zemeckis', 1994);

-- Inserindo dados de exemplo na tabela de salas
INSERT INTO cinema.salas (nome, capacidade)
VALUES
    ('Sala 1', 100),
    ('Sala 2', 80),
    ('Sala 3', 120);

-- Inserindo dados de exemplo na tabela de sessões
INSERT INTO cinema.sessoes (id_filme, id_sala, data_hora)
VALUES
    (1, 1, '2024-04-06 18:00:00'),
    (2, 2, '2024-04-06 20:00:00'),
    (3, 3, '2024-04-07 14:00:00');

-- Inserindo dados de exemplo na tabela de cadeiras
INSERT INTO cinema.cadeiras (id_sala, numero, disponivel)
SELECT id_sala, generate_series(1, capacidade), TRUE
FROM cinema.salas;

-- Inserindo dados de exemplo na tabela de vendas de ingressos
INSERT INTO cinema.vendas_ingressos (id_cliente, id_sessao, id_cadeira, valor, data_venda)
VALUES
    (1, 1, 1, 20.00, '2024-04-06'),
    (2, 2, 30, 25.00, '2024-04-06'),
    (3, 3, 50, 30.00, '2024-04-07');

-- Inserindo dados de exemplo na tabela de avaliações
INSERT INTO cinema.avaliacoes (id_cliente, id_filme, nota, comentario, data_avaliacao)
VALUES
    (1, 1, 5, 'Ótimo filme!', '2024-04-06'),
    (2, 2, 4, 'Muito interessante.', '2024-04-06'),
    (3, 3, 3, 'Bom filme, mas poderia ser melhor.', '2024-04-07');

-- Inserindo dados de exemplo na tabela de promoções
INSERT INTO cinema.promocoes (nome, descricao, desconto)
VALUES
    ('Promoção de Verão', 'Desconto especial para filmes de verão!', 10.00),
    ('Desconto em Filmes Clássicos', 'Desconto exclusivo para filmes clássicos!', 5.00),
    ('Combo Pipoca e Refrigerante', 'Ganhe um desconto ao comprar o combo pipoca e refrigerante!', 3.00);

-- Inserindo dados de exemplo na tabela de clientes_promocoes
INSERT INTO cinema.clientes_promocoes (id_cliente, id_promocao)
VALUES
    (1, 1), -- Maria Silva participando da Promoção de Verão
    (2, 2), -- João Souza participando do Desconto em Filmes Clássicos
    (3, 1), -- Pedro Oliveira participando da Promoção de Verão
    (1, 3), -- Maria Silva participando do Combo Pipoca e Refrigerante
    (2, 3); -- João Souza participando do Combo Pipoca e Refrigerante


